#! /usr/bin/env bash

### useful commands

## show configured servers and groups
# /usr/local/cronicle/bin/storage-cli.js list_get global/server_groups
# /usr/local/cronicle/bin/storage-cli.js list_get global/servers

## show configured server 0 and group 0
# /usr/local/cronicle/bin/storage-cli.js get global/server_groups/0
# /usr/local/cronicle/bin/storage-cli.js get global/servers/0

## recovery password
# /usr/local/cronicle/bin/control.sh admin USERNAME PASSWORD

ROOT_DIR=/usr/local/cronicle
CONF_DIR=$ROOT_DIR/conf
BIN_DIR=$ROOT_DIR/bin

# DATA_DIR needs to be the same as the exposed Docker volume in Dockerfile
DATA_DIR=$ROOT_DIR/data

# LOGS_DIR needs to be the same as the exposed Docker volume in Dockerfile
LOGS_DIR=$ROOT_DIR/logs

# PLUGINS_DIR needs to be the same as the exposed Docker volume in Dockerfile
PLUGINS_DIR=$ROOT_DIR/plugins

command=$BIN_DIR/control.sh

# The env variables below are needed
: ${CRONICLE_Storage__Filesystem__base_dir:="${DATA_DIR}"}
: ${NODE_EXTRA_CA_CERTS:="/etc/ssl/certs/ca-certificates.crt"}
: ${CRONICLE_echo:=1}
: ${CRONICLE_foreground:=0}
: ${CRONICLE_master_ping_timeout:=30}
: ${CRONICLE_email_from:="cronicle@localhost"}
: ${CRONICLE_smtp_hostname:="localhost"}
: ${CRONICLE_smtp_port:=25}

# remove old lock file. resolves #9
pidfile=$LOGS_DIR/cronicled.pid

check_pid() {
if [ -f "$pidfile" ]; then
  PID=$(cat "$pidfile")
  if ps -p $PID > /dev/null; then
   echo "Cronicle is already running with PID: $PID"
   exit 0
  # not needed to remove pid files if exist. managed by cronicles script itself
  #else
  #  echo "Removing old Cronicle PID file: $pidfile"
  #  rm -f "$pidfile"
  fi
fi
}

# Proxy signals
function kill_app(){
    #kill $(cat $pidfile)
    $command stop
    exit $?
}
trap "kill_app" SIGINT SIGTERM SIGKILL

make_config() {
# Only run setup when setup needs to be done
if [ ! -f $DATA_DIR/.setup_done ]; then
  $BIN_DIR/control.sh setup
  cp $CONF_DIR/config.json $CONF_DIR/config.json.origin

  if [ -f $DATA_DIR/config.json.import ]; then
    # Move in custom configuration
    cp $DATA_DIR/config.json.import $CONF_DIR/config.json
  fi

  # Create plugins directory
  mkdir -p $PLUGINS_DIR

  # Marking setup done
  touch $DATA_DIR/.setup_done
  else
    # make sure the default global server 0 is configured with the right hostname and IP: ref. https://github.com/jhuckaby/Cronicle/issues/36
    $BIN_DIR/storage-cli.js get global/servers/0 | jq --arg hostname "$(hostname -s)" --arg ip "$(hostname -i)" '.items[0].hostname=$hostname | .items[0].ip=$ip' | $BIN_DIR/storage-cli.js put global/servers/0
    $BIN_DIR/storage-cli.js get global/server_groups/0 | jq --arg hostname "^($(hostname -s))$" '.items[0].regexp=$hostname' | $BIN_DIR/storage-cli.js put global/server_groups/0
fi
}

# run cronicle with unprivileged user
# chown -R cronicle:cronicle data/ logs/

check_pid
make_config

if [ -n "$1" ]; then
  exec $command "$@"
else
  $command start
fi

sleep 2

# loop while the pidfile exist and the process exist
while [ -f $pidfile ] && kill -0 $(cat "$pidfile"); do
  sleep 5
done
exit 255 # exit unexpected
